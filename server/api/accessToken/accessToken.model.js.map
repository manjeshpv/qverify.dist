{"version":3,"sources":["api/accessToken/accessToken.model.js"],"names":[],"mappings":";;AACA,IAAM,SAAS,QAAQ,QAAR,CAAf;;AAEA,OAAO,OAAP,GAAiB,SAAS,gBAAT,CAA0B,SAA1B,EAAqC,SAArC,EAAgD;AAC/D,MAAM,cAAc,UAAU,MAAV,CAAiB,aAAjB,EAAgC;AAClD,QAAI;AACF,YAAM,UAAU,OAAV,CAAkB,EAAlB,CADJ;AAEF,qBAAe,IAFb;AAGF,kBAAY,IAHV;AAIF,iBAAW,KAJT;AAKF,cAAQ;AALN,KAD8C;AAQlD,kBAAc;AACZ,YAAM,UAAU,MAAV,CAAiB,GAAjB,CADM;AAEZ,gBAAU;AACR,aAAK;AACH,gBAAM,CAAC,EAAD,EAAK,GAAL,CADH;AAEH,eAAK;AAFF;AADG,OAFE;AAQZ,iBAAW;AARC,KARoC;AAkBlD,aAAS;AACP,YAAM,UAAU,IADT;AAEP,iBAAW,KAFJ;AAGP,oBAAc,SAAS,UAAT,GAAsB;AAClC,eAAO,SAAS,GAAT,CAAa,CAAb,EAAgB,OAAhB,CAAP;AACD;AALM,KAlByC;AAyBlD,gBAAY;AACV,YAAM,UAAU,IADN;AAEV,iBAAW,KAFD;AAGV,oBAAc,UAAU;AAHd,KAzBsC;AA8BlD,YAAQ;AACN,YAAM,UAAU,OADV;AAEN,oBAAc,IAFR;AAGN,iBAAW;AAHL,KA9B0C;AAmClD,WAAO,UAAU,MAAV,CAAiB,GAAjB;AAnC2C,GAAhC,EAoCjB;AACD,eAAW,eADV;AAED,gBAAY,KAFX;AAGD,iBAAa,IAHZ;AAID,kBAAc;AACZ,aAAO,EAAE,QAAQ,CAAV;AADK,KAJb;;AAQD,kBAAc;AACZ,eADY,qBACF,MADE,EACM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAY,SAAZ,CAAsB,OAAO,GAA7B,EAAkC;AAChC,sBAAY;AADoB,SAAlC;;AAIA,oBAAY,SAAZ,CAAsB,OAAO,IAA7B,EAAmC;AACjC,sBAAY;AADqB,SAAnC;AAGD;AArBW;AARb,GApCiB,CAApB;;AAqEA,SAAO,WAAP;AACD,CAvED","file":"api/accessToken/accessToken.model.js","sourcesContent":["\r\nconst moment = require('moment');\r\n\r\nmodule.exports = function AccessTokenModel(sequelize, DataTypes) {\r\n  const AccessToken = sequelize.define('AccessToken', {\r\n    id: {\r\n      type: DataTypes.INTEGER(14),\r\n      autoIncrement: true,\r\n      primaryKey: true,\r\n      allowNull: false,\r\n      unique: true,\r\n    },\r\n    access_token: {\r\n      type: DataTypes.STRING(256),\r\n      validate: {\r\n        len: {\r\n          args: [10, 256],\r\n          msg: 'Maximum length for value field is 255',\r\n        },\r\n      },\r\n      allowNull: false,\r\n    },\r\n    expires: {\r\n      type: DataTypes.DATE,\r\n      allowNull: false,\r\n      defaultValue: function setExpires() {\r\n        return moment().add(1, 'hours');\r\n      },\r\n    },\r\n    created_at: {\r\n      type: DataTypes.DATE,\r\n      allowNull: false,\r\n      defaultValue: DataTypes.NOW,\r\n    },\r\n    status: {\r\n      type: DataTypes.BOOLEAN,\r\n      defaultValue: true,\r\n      allowNull: false,\r\n    },\r\n    scope: DataTypes.STRING(256),\r\n  }, {\r\n    tableName: 'access_tokens',\r\n    timestamps: false,\r\n    underscored: true,\r\n    defaultScope: {\r\n      where: { status: 1 },\r\n    },\r\n\r\n    classMethods: {\r\n      associate(models) {\r\n        //AccessToken.belongsToMany(models.Scope, {\r\n        //  through: {\r\n        //    model: models.ItemScope,\r\n        //    unique: false,\r\n        //    scope: {\r\n        //      scopable: 'access_token',\r\n        //    },\r\n        //  },\r\n        //  foreignKey: 'scopable_id',\r\n        //  constraints: false,\r\n        //});\r\n\r\n        AccessToken.belongsTo(models.App, {\r\n          foreignKey: 'app_id',\r\n        });\r\n\r\n        AccessToken.belongsTo(models.User, {\r\n          foreignKey: 'user_id',\r\n        });\r\n      },\r\n    },\r\n  });\r\n\r\n  return AccessToken;\r\n};\r\n"],"sourceRoot":"/source/"}