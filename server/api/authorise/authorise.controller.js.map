{"version":3,"sources":["api/authorise/authorise.controller.js"],"names":[],"mappings":";;;;;QAiBgB,K,GAAA,K;;AARhB;;AACA;;;;;;AAVA;;;;;;;;;AAYA,SAAS,WAAT,CAAqB,GAArB,EAA0B,aAA1B,EAAyC,GAAzC,EAA8C;AAC5C,MAAM,aAAa,iBAAiB,GAApC;AACA,SAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,IAAvB,CAA4B,GAA5B,CAAP;AACD;;AAEM,SAAS,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB;AAC9B,SAAO,WAAI,OAAJ,CAAY;AACjB,WAAO;AACL,iBAAW,IAAI,KAAJ,CAAU,SADhB;AAEL,oBAAc,IAAI,KAAJ,CAAU;AAFnB,KADU;AAKjB,gBAAY,CAAC,IAAD,EAAO,MAAP;AALK,GAAZ,EAOJ,IAPI,CAOC,iBAAS;AACb,QAAI,CAAC,KAAL,EAAY,OAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,EAAE,OAAO,gBAAT,EAArB,CAAP;AACZ,WAAO,IAAI,IAAJ,CAAS,KAAT,CAAP;AACD,GAVI,EAWJ,KAXI,CAWE;AAAA,WAAO,YAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,CAAP;AAAA,GAXF,CAAP;AAYD;;AAED,QAAQ,MAAR,GAAiB,kBAAM,aAAN,CAAoB,UAAC,GAAD,EAAM,QAAN,EAAmB;AACtD,MAAI,IAAI,IAAJ,CAAS,KAAT,KAAmB,MAAvB,EAA+B,OAAO,SAAS,IAAT,EAAe,KAAf,CAAP;AAC/B,SAAO,SAAS,IAAT,EAAe,IAAf,EAAqB,IAAI,IAAzB,CAAP;AACD,CAHgB,CAAjB","file":"api/authorise/authorise.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/authorise              ->  index\r\n * POST    /api/authorise              ->  create\r\n * GET     /api/authorise/:id          ->  show\r\n * PUT     /api/authorise/:id          ->  update\r\n * DELETE  /api/authorise/:id          ->  destroy\r\n */\r\n\r\nimport { App } from '../../sqldb';\r\nimport oAuth from '../../components/oauthjs';\r\n\r\nfunction handleError(res, argStatusCode, err) {\r\n  const statusCode = argStatusCode || 500;\r\n  return res.status(statusCode).json(err);\r\n}\r\n\r\nexport function index(req, res) {\r\n  return App.findOne({\r\n    where: {\r\n      client_id: req.query.client_id,\r\n      redirect_uri: req.query.redirect_uri,\r\n    },\r\n    attributes: ['id', 'name'],\r\n  })\r\n    .then(model => {\r\n      if (!model) return res.status(404).json({ error: 'Invalid Client' });\r\n      return res.json(model);\r\n    })\r\n    .catch(err => handleError(res, 500, err));\r\n}\r\n\r\nexports.create = oAuth.authCodeGrant((req, callback) => {\r\n  if (req.body.allow !== 'true') return callback(null, false);\r\n  return callback(null, true, req.user);\r\n});\r\n"],"sourceRoot":"/source/"}