{"version":3,"sources":["api/state/state.events.js"],"names":[],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;AACA,IAAI,QAAQ,QAAQ,aAAR,EAAuB,KAAnC;AACA,IAAI,cAAc,0BAAlB;;AAEA;AACA,YAAY,eAAZ,CAA4B,CAA5B;;AAEA;AACA,IAAI,SAAS;AACX,iBAAe,MADJ;AAEX,iBAAe,MAFJ;AAGX,kBAAgB;AAHL,CAAb;;AAMA;AACA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,QAAM,IAAN,CAAW,CAAX,EAAc,UAAU,KAAV,CAAd;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAS,GAAT,EAAc,OAAd,EAAuB,IAAvB,EAA6B;AAClC,gBAAY,IAAZ,CAAiB,QAAQ,GAAR,GAAc,IAAI,GAAnC,EAAwC,GAAxC;AACA,gBAAY,IAAZ,CAAiB,KAAjB,EAAwB,GAAxB;AACA,SAAK,IAAL;AACD,GAJD;AAKD;;kBAEc,W","file":"api/state/state.events.js","sourcesContent":["/**\n * State model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar State = require('../../sqldb').State;\nvar StateEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nStateEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'afterCreate': 'save',\n  'afterUpdate': 'save',\n  'afterDestroy': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  State.hook(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc, options, done) {\n    StateEvents.emit(event + ':' + doc._id, doc);\n    StateEvents.emit(event, doc);\n    done(null);\n  }\n}\n\nexport default StateEvents;\n"],"sourceRoot":"/source/"}