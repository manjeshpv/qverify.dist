{"version":3,"sources":["api/app/app.events.js"],"names":[],"mappings":";;;;;;AAMA;;AACA,IAAI,MAAM,QAAQ,aAAR,EAAuB,GAAjC,CAPA;;;;AAQA,IAAI,YAAY,0BAAhB;;AAEA;AACA,UAAU,eAAV,CAA0B,CAA1B;;AAEA;AACA,IAAI,SAAS;AACX,iBAAe,MADJ;AAEX,iBAAe,MAFJ;AAGX,kBAAgB;AAHL,CAAb;;AAMA;AACA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,MAAI,IAAJ,CAAS,CAAT,EAAY,UAAU,KAAV,CAAZ;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAU,GAAV,EAAe,OAAf,EAAwB,IAAxB,EAA8B;AACnC,cAAU,IAAV,CAAe,QAAQ,GAAR,GAAc,IAAI,GAAjC,EAAsC,GAAtC;AACA,cAAU,IAAV,CAAe,KAAf,EAAsB,GAAtB;AACA,SAAK,IAAL;AACD,GAJD;AAKD;;kBAEc,S","file":"api/app/app.events.js","sourcesContent":["/**\r\n * App model events\r\n */\r\n\r\n\r\n\r\nimport { EventEmitter } from 'events';\r\nvar App = require('../../sqldb').App;\r\nvar AppEvents = new EventEmitter();\r\n\r\n// Set max event listeners (0 == unlimited)\r\nAppEvents.setMaxListeners(0);\r\n\r\n// Model events\r\nvar events = {\r\n  'afterCreate': 'save',\r\n  'afterUpdate': 'save',\r\n  'afterDestroy': 'remove',\r\n};\r\n\r\n// Register the event emitter to the model events\r\nfor (var e in events) {\r\n  var event = events[e];\r\n  App.hook(e, emitEvent(event));\r\n}\r\n\r\nfunction emitEvent(event) {\r\n  return function (doc, options, done) {\r\n    AppEvents.emit(event + ':' + doc._id, doc);\r\n    AppEvents.emit(event, doc);\r\n    done(null);\r\n  };\r\n}\r\n\r\nexport default AppEvents;\r\n"],"sourceRoot":"/source/"}