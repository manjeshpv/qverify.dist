{"version":3,"sources":["api/company/company.controller.js"],"names":[],"mappings":"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","file":"api/company/company.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/companys              ->  index\n * POST    /api/companys              ->  create\n * GET     /api/companys/:id          ->  show\n * PUT     /api/companys/:id          ->  update\n * DELETE  /api/companys/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport db, {Company,User} from '../../sqldb';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    return entity.updateAttributes(updates)\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.destroy()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Companys\nexport function index(req, res) {\n  return Company.findAll()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Company from the DB\nexport function show(req, res) {\n  return Company.find({\n    where: {\n      id: req.params.id\n    },\n    include: [db.Location]\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Company in the DB\nexport function create(req, res) {\n  //console.log('Body :'+  req.body);\n  return Company.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Company in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Company.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Company from the DB\nexport function destroy(req, res) {\n  return Company.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}