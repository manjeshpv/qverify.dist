{"version":3,"sources":["sqldb/index.js"],"names":[],"mappings":"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","file":"sqldb/index.js","sourcesContent":["/**\n * Sequelize initialization module\n */\n\n'use strict';\n\nimport path from 'path';\nimport config from '../config/environment';\nimport Sequelize from 'sequelize';\nimport Minio from 'minio';\nimport Bluebird from 'bluebird';\nvar db = {\n  Sequelize,\n  sequelizeQverify: new Sequelize(\n    config.qverify.database, config.qverify.username,\n    config.qverify.password, config.qverify\n  ),\n  Minio: new Minio(config.MINIO),\n};\n\n// Insert models below\ndb.Pin = db.sequelizeQverify.import('../api/pin/pin.model');\ndb.State = db.sequelizeQverify.import('../api/state/state.model');\ndb.UniversityName = db.sequelizeQverify.import('../api/university_name/university_name.model');\ndb.UsersPhoneRelation = db.sequelizeQverify.import('../api/users_phone_relation/users_phone_relation.model');\ndb.HouseType = db.sequelizeQverify.import('../api/house_type/house_type.model');\ndb.Designation = db.sequelizeQverify.import('../api/designation/designation.model');\ndb.Degree = db.sequelizeQverify.import('../api/degree/degree.model');\ndb.CaseType = db.sequelizeQverify.import('../api/case_type/case_type.model');\ndb.Status = db.sequelizeQverify.import('../api/status/status.model');\ndb.AllocationStatus = db.sequelizeQverify.import('../api/allocation_status/allocation_status.model');\ndb.Allocation = db.sequelizeQverify.import('../api/allocation/allocation.model');\ndb.Case = db.sequelizeQverify.import('../api/case/case.model');\ndb.CaseSiteVerification = db.sequelizeQverify.import('../api/case_site_verification/case_site_verification.model');\ndb.CaseEducationVerification = db.sequelizeQverify.import('../api/case_education_verification/case_education_verification.model');\ndb.CaseCriminalVerification = db.sequelizeQverify.import('../api/case_criminal_verification/case_criminal_verification.model');\ndb.CaseAddressVerification = db.sequelizeQverify.import('../api/case_address_verification/case_address_verification.model');\ndb.Location = db.sequelizeQverify.import('../api/location/location.model');\ndb.Company = db.sequelizeQverify.import('../api/company/company.model');\ndb.UserType = db.sequelizeQverify.import('../api/user_type/user_type.model');\ndb.User = db.sequelizeQverify.import('../api/user/user.model');\n//db.Manager = db.sequelizeQverify.import('../api/manager/manager.model');\n\n// OAuth\ndb.RefreshToken = db.sequelizeQverify.import('../api/refreshToken/refreshToken.model');\ndb.AccessToken = db.sequelizeQverify.import('../api/accessToken/accessToken.model');\ndb.App = db.sequelizeQverify.import('../api/app/app.model');\ndb.AuthCode = db.sequelizeQverify.import('../api/authCode/authCode.model');\n\nObject.keys(db).forEach(modelName => {\n  if ('associate' in db[modelName]) {\n    db[modelName].associate(db);\n  }\n});\n\n\nBluebird.promisifyAll(Object.getPrototypeOf(db.Minio));\n\ndb.Minio.bufferUpload = function(minioObject){\n  minioObject.bucket = minioObject.bucket || 'qverify'   // Bucket name always in lowercaseObj\n  return db.Minio.putObjectAsync(minioObject.bucket,minioObject.object, minioObject.buffer, 'application/octet-stream')\n}\n\nfunction qualifyBucket(bucketName) {\n  let bucket = bucketName;\n  if (typeof bucket === 'string' && bucket[0] === '/') {\n    bucket = bucket.slice(1);\n  }\n  return bucket.toLowerCase();\n}\n\ndb.Minio.base64Upload = function(minioObject){\n  minioObject.buffer = Buffer.from(minioObject.base64String, 'base64');\n  return db.Minio.bufferUpload(minioObject)\n}\n\ndb.Minio.downloadLinkBase = (minioObject) => {\n  const minObj = minioObject;\n  minObj.bucket = minObj.bucket || 'qverify';   // Bucket name always in lowercaseObj\n  minObj.expires = minObj.expires || 24 * 60 * 60;   // Expired in one day\n  minObj.headers = {\n    'response-content-disposition':\n      `attachment; filename=\"${minObj.name.replace(/[^a-zA-Z0-9-_\\.]/g, '')}\"` };\n  return db.Minio.presignedGetObjectAsync(\n    minObj.bucket.toLowerCase(), qualifyBucket(minObj.object),\n    minObj.expires, minObj.headers\n  );\n};\n\ndb.Minio.downloadLink = (minioObject) => {\n  const minObj = minioObject;\n  minObj.bucket = minObj.bucket || 'qverify';   // Bucket name always in lowercase\n  return db.Minio.statObjectAsync(minObj.bucket, qualifyBucket(minObj.object))\n    .then(() => db.Minio.downloadLinkBase(minObj))\n    .catch((err) => {\n      console.log('Minio: File not found', minObj, err)\n      return `${config.PREFIX}api.${config.DOMAIN}/api/404.pdf`;\n    });\n};\n\nmodule.exports = db;\n"],"sourceRoot":"/source/"}