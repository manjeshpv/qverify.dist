{"version":3,"sources":["sqldb/index.js"],"names":[],"mappings":"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","file":"sqldb/index.js","sourcesContent":["/**\r\n * Sequelize initialization module\r\n */\r\n\r\n'use strict';\r\n\r\nimport path from 'path';\r\nimport config from '../config/environment';\r\nimport Sequelize from 'sequelize';\r\nimport Minio from 'minio';\r\nimport Bluebird from 'bluebird';\r\nvar db = {\r\n  Sequelize,\r\n  sequelizeQverify: new Sequelize(\r\n    config.qverify.database, config.qverify.username,\r\n    config.qverify.password, config.qverify\r\n  ),\r\n  Minio: new Minio(config.MINIO),\r\n};\r\n\r\n// Insert models below\r\ndb.UniversityName = db.sequelizeQverify.import('../api/university_name/university_name.model');\r\ndb.UsersPhoneRelation = db.sequelizeQverify.import('../api/users_phone_relation/users_phone_relation.model');\r\ndb.HouseType = db.sequelizeQverify.import('../api/house_type/house_type.model');\r\ndb.Designation = db.sequelizeQverify.import('../api/designation/designation.model');\r\ndb.Degree = db.sequelizeQverify.import('../api/degree/degree.model');\r\ndb.CaseType = db.sequelizeQverify.import('../api/case_type/case_type.model');\r\ndb.Status = db.sequelizeQverify.import('../api/status/status.model');\r\ndb.AllocationStatus = db.sequelizeQverify.import('../api/allocation_status/allocation_status.model');\r\ndb.Allocation = db.sequelizeQverify.import('../api/allocation/allocation.model');\r\ndb.Case = db.sequelizeQverify.import('../api/case/case.model');\r\ndb.CaseSiteVerification = db.sequelizeQverify.import('../api/case_site_verification/case_site_verification.model');\r\ndb.CaseEducationVerification = db.sequelizeQverify.import('../api/case_education_verification/case_education_verification.model');\r\ndb.CaseCriminalVerification = db.sequelizeQverify.import('../api/case_criminal_verification/case_criminal_verification.model');\r\ndb.CaseAddressVerification = db.sequelizeQverify.import('../api/case_address_verification/case_address_verification.model');\r\ndb.Location = db.sequelizeQverify.import('../api/location/location.model');\r\ndb.Company = db.sequelizeQverify.import('../api/company/company.model');\r\ndb.UserType = db.sequelizeQverify.import('../api/user_type/user_type.model');\r\ndb.User = db.sequelizeQverify.import('../api/user/user.model');\r\n//db.Manager = db.sequelizeQverify.import('../api/manager/manager.model');\r\n\r\n// OAuth\r\ndb.RefreshToken = db.sequelizeQverify.import('../api/refreshToken/refreshToken.model');\r\ndb.AccessToken = db.sequelizeQverify.import('../api/accessToken/accessToken.model');\r\ndb.App = db.sequelizeQverify.import('../api/app/app.model');\r\ndb.AuthCode = db.sequelizeQverify.import('../api/authCode/authCode.model');\r\n\r\nObject.keys(db).forEach(modelName => {\r\n  if ('associate' in db[modelName]) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\n\r\nBluebird.promisifyAll(Object.getPrototypeOf(db.Minio));\r\n\r\ndb.Minio.bufferUpload = function(minioObject){\r\n  minioObject.bucket = minioObject.bucket || 'qverify'   // Bucket name always in lowercaseObj\r\n  return db.Minio.putObjectAsync(minioObject.bucket,minioObject.object, minioObject.buffer, 'application/octet-stream')\r\n}\r\n\r\ndb.Minio.base64Upload = function(minioObject){\r\n  minioObject.buffer = Buffer.from(minioObject.base64String, 'base64');\r\n  return db.Minio.bufferUpload(minioObject)\r\n}\r\n\r\ndb.Minio.downloadLink = function(minioObject){\r\n  minioObject.bucket = minioObject.bucket || 'qverify'   // Bucket name always in lowercaseObj\r\n  minioObject.expires = minioObject.expires || 24*60*60;   // Expired in one day\r\n  minioObject.headers = minioObject.download ? {\r\n    'response-content-disposition': `attachment; filename=${minioObject.filename ||  minioObject.bucket.split('/').pop()};`\r\n  } : {};\r\n  return db.Minio.presignedGetObjectAsync(minioObject.bucket, minioObject.object, minioObject.expires, minioObject.headers)\r\n}\r\n\r\nmodule.exports = db;\r\n"],"sourceRoot":"/source/"}