{"version":3,"sources":["components/oauthjs/index.js"],"names":[],"mappings":"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","file":"components/oauthjs/index.js","sourcesContent":["'use strict';\r\n\r\nimport { App, User, Company, AccessToken, AuthCode, RefreshToken } from '../../sqldb';\r\nimport config from \"../../config/environment\";\r\nmodule.exports = require('oauth2-server')({\r\n  model: {\r\n    getAccessToken: function getAccessToken(bearerToken, callback) {\r\n      AccessToken\r\n        .findOne({\r\n          where: { access_token: bearerToken },\r\n          attributes: ['access_token', 'expires'],\r\n          include: [\r\n            {\r\n              model: User,\r\n              include: [Company],\r\n              attributes: ['id','name', `created_at`, `mobile`, `email`, 'company_id'],\r\n            },\r\n          ],\r\n        })\r\n        .then(accessToken => {\r\n          if (!accessToken) return callback(null, false);\r\n          const token = accessToken.toJSON();\r\n          token.user = token.User;\r\n          callback(null, token);\r\n          return\r\n        })\r\n        .catch(callback);\r\n    },\r\n\r\n    // serialize App accessing api\r\n    getClient: function getClient(clientId, clientSecret, callback) {\r\n      const options = {\r\n        where: { client_id: clientId },\r\n        attributes: ['id', ['client_id', 'clientId'], ['redirect_uri', 'redirectUri']],\r\n      };\r\n      if (clientSecret) options.where.client_secret = clientSecret;\r\n\r\n      App\r\n        .findOne(options)\r\n        .then(function serializeClient(client) {\r\n          if (!client) return callback(null, false);\r\n          callback(null, client.toJSON());\r\n          return\r\n        })\r\n        .catch(callback);\r\n    },\r\n\r\n    grantTypeAllowed: function grantTypeAllowed(clientId, grantType, callback) {\r\n      callback(null, true);\r\n      return;\r\n    },\r\n\r\n    saveAccessToken: function saveAccessToken(accessToken, client, expires, user, callback) {\r\n      return AccessToken\r\n        .build({ expires })\r\n        .set('app_id', client.id)\r\n        .set('access_token', accessToken)\r\n        .set('user_id', user.id)\r\n        .save()\r\n        .then(token => callback(null, token))\r\n        .catch(callback);\r\n    },\r\n\r\n    getAuthCode: function getAuthCode(authCode, callback) {\r\n      AuthCode\r\n        .findOne({\r\n          where: { auth_code: authCode },\r\n          attributes: [['app_id', 'clientId'], 'expires', ['user_id', 'userId']],\r\n        })\r\n        .then(function verifyAuthCode(authCodeModel) {\r\n          if (!authCodeModel) return callback(null, false);\r\n          callback(null, authCodeModel.toJSON());\r\n          return\r\n        })\r\n        .catch(callback);\r\n    },\r\n\r\n    saveAuthCode: function saveAuthCode(authCode, client, expires, user, callback) {\r\n      return AuthCode\r\n        .build({ expires })\r\n        .set('app_id', client.id)\r\n        .set('auth_code', authCode)\r\n        .set('user_id', user.id)\r\n        .save()\r\n        .then(code => callback(null, code))\r\n        .catch(callback);\r\n    },\r\n\r\n    getUser: function getUser(username, password, callback) {\r\n      return User\r\n        .findOne({\r\n          where: { username },\r\n          attributes: ['id', 'username', 'name', 'password'],\r\n        })\r\n        .then(function(user) {\r\n          return user.verifyPassword(password, callback);\r\n        })\r\n        .catch(callback);\r\n    },\r\n\r\n    saveRefreshToken: function saveRefreshToken(refreshToken, client, expires, user, callback) {\r\n      return RefreshToken\r\n        .build({ expires })\r\n        .set('app_id', client.id)\r\n        .set('refresh_token', refreshToken)\r\n        .set('user_id', user.id)\r\n        .save()\r\n        .then(token => callback(null, token))\r\n        .catch(callback);\r\n    },\r\n\r\n    getRefreshToken: function getRefreshToken(refreshToken, callback) {\r\n      return RefreshToken\r\n        .findOne({\r\n          where: { refresh_token: refreshToken },\r\n          attributes: [['app_id', 'clientId'], ['user_id', 'userId'], 'expires'],\r\n        })\r\n        .then(function sendRefreshToken(refreshTokenModel) {\r\n          if (!refreshTokenModel) return callback(null, false);\r\n          callback(null, refreshTokenModel.toJSON());\r\n          return\r\n        })\r\n        .catch(callback);\r\n    },\r\n\r\n    generateToken: function generateToken(type, req, callback) {\r\n      // reissue refreshToken if grantType is refresh_token\r\n      if (type === 'refreshToken' && req.body.grant_type === 'refresh_token') {\r\n        return callback(null, { refreshToken: req.body.refresh_token });\r\n      }\r\n\r\n      callback(null, false);\r\n      return\r\n    },\r\n  },\r\n  grants: ['authorization_code', 'password', 'refresh_token'],\r\n  debug: true,\r\n});\r\n"],"sourceRoot":"/source/"}